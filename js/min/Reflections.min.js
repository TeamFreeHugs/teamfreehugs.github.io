function injectFunction(t,e,n){if(null==t)throw new TypeError("Expected Function, got null");if("function"!=typeof t)throw new TypeError("Expected Function, got "+typeof t);if(null==e)throw new TypeError("Expected String, got null");if("string"!=typeof e)throw new TypeError("Expected String, got "+typeof e);if(null==n)window[e]=t;else{if("object"!=typeof n)throw new TypeError("Expected Object, got "+typeof n);n[e]=t}return t}function injectField(t,e,n){if(null==t)throw new TypeError("Expected Object, got null");if("function"==typeof t)throw new TypeError("Expected Object, got function");if(null==e)throw new TypeError("Expected String, got null");if("function"==typeof e)throw new TypeError("Expected String, got function");if(null==n)window[e]=t;else{if("object"!=typeof n)throw new TypeError("Expected Object, got "+typeof n);n[e]=t}return t}function getFunctionByName(t,e){if(null==e)throw new TypeError("Expected String, got null");if("string"!=typeof e)throw new TypeError("Expected String, got "+typeof e);if("object"!=typeof t)throw new TypeError("Expected Object, got "+typeof t);if(toReturn=null!=t?t[e]:window[e],"function"!=typeof toReturn)throw new TypeError("Field "+e+" is not a function!");return toReturn}function getFieldByName(t,e){if("object"!=typeof t)throw new TypeError("Expected Object, got "+typeof t);if(null==e)throw new TypeError("Expected String, got null");if("string"!=typeof e)throw new TypeError("Expected String, got "+typeof e);if(toReturn=null!=t?t[e]:window[e],"function"==typeof toReturn)throw new TypeError("Field "+toReturn+" is a function!");return toReturn}function runFunctionByName(t,e){for(newArgs=[],p=2;p<arguments.length;++p)newArgs.push(arguments[p]);return getFunctionByName(t,e).apply(null==t?t:window,newArgs)}